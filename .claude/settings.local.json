{
  "permissions": {
    "allow": [
      "Bash(.venv/bin/pytest tests/performance/test_latency.py::TestInferenceLatency::test_model_compilation_speedup -xvs -n 0)",
      "Bash(.venv/bin/pytest tests/performance/test_latency.py::TestLatencyUnderLoad::test_latency_stability tests/performance/test_memory.py::TestMemoryUsage::test_peak_memory_tracking tests/performance/test_memory.py::TestMemoryUsage::test_memory_profiling_detailed -xvs -n 0)",
      "Bash(.venv/bin/pytest tests/performance/test_latency.py::TestLatencyUnderLoad::test_latency_stability -xvs -n 0)",
      "Bash(unzip:*)",
      "Bash(grep:*)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "Bash(git push:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(modal app:*)",
      "Bash(python3:*)",
      "Bash(tmux kill-session:*)",
      "Bash(kill:*)",
      "Bash(python:*)",
      "Bash(make:*)",
      "Bash(.venv/bin/ruff check src/ tests/ --fix --unsafe-fixes)",
      "Bash(export BGB_LIMIT_FILES=50)",
      "Bash(.venv/bin/pytest tests/unit/train/test_loop.py::TestTrainingSmoke::test_balanced_sampling -xvs)",
      "Bash(export BGB_LIMIT_FILES=20)",
      "Bash(timeout 30 python:*)",
      "Bash(export BGB_LIMIT_FILES=5)",
      "Bash(export BGB_DISABLE_TQDM=1)",
      "Bash(timeout 60 python:*)",
      "Bash(timeout:*)",
      "Bash(export BGB_LIMIT_FILES=2)",
      "Bash(export BGB_LIMIT_FILES=3)",
      "Bash(tmux new-session:*)",
      "Bash(tmux capture-pane:*)",
      "Bash(tmux send-keys:*)",
      "Bash(modal run:*)",
      "Bash(tmux ls:*)",
      "Bash(for f in configs/*.yaml)",
      "Bash(done)",
      "Bash(awk:*)",
      "Bash(xargs -r kill -9)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git pull:*)",
      "Bash(tmux attach:*)",
      "Bash(git tag:*)",
      "Bash(git log:*)",
      "Bash(gh release create:*)",
      "Bash(gh release edit:*)",
      "Bash(gh release delete:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(if [ -f .coverage ])",
      "Bash(then coverage report --show-missing)",
      "Bash(else echo \"No coverage file - running quick coverage check\")",
      "Bash(.venv/bin/pytest tests/unit/models/test_mamba.py --cov=src/brain_brr --cov-report=term-missing --no-header -q)",
      "Bash(fi)",
      "Bash(find:*)",
      "Bash(.venv/bin/pytest tests/unit/data/test_io_edge_cases.py -xvs --tb=short)",
      "Bash(.venv/bin/pytest tests/unit/data/test_io_edge_cases.py::TestRealCorruptedFiles::test_extreme_class_imbalance_real_data -xvs --tb=short)",
      "Bash(.venv/bin/pytest tests/integration/data/test_io_edge_cases.py -xvs --tb=short)",
      "Bash(.venv/bin/pytest tests/integration/post/test_hysteresis_edge.py -xvs --tb=short)",
      "Bash(.venv/bin/pytest tests/integration/test_training_edge_cases.py::TestTrainingExplosions::test_gradient_explosion_extreme_lr -xvs --tb=short)",
      "Bash(.venv/bin/pytest tests/integration/ -m integration -q --tb=short)",
      "Bash(.venv/bin/pytest tests/integration/ -m integration -xvs)",
      "Bash(.venv/bin/pytest tests/ -q --tb=short)",
      "Bash(.venv/bin/pytest tests/unit/ -q --tb=short)",
      "Bash(.venv/bin/pytest:*)",
      "Bash(nvidia-smi:*)",
      "Bash(source:*)",
      "Bash(lscpu:*)",
      "Bash(lsblk:*)",
      "Bash(sudo hdparm:*)",
      "Bash(tar:*)",
      "Bash(pip install:*)",
      "Bash(modal:*)",
      "Bash(chmod:*)",
      "Bash(watch:*)",
      "Bash(cat:*)",
      "Bash(xargs basename:*)",
      "Bash(tmux new:*)",
      "Bash(echo:*)",
      "Bash(env)",
      "Bash(head:*)",
      "Bash(while read f)",
      "Bash(tree:*)",
      "Bash(for f in configs/local/*.yaml)",
      "Bash(while read file)",
      "Bash(do grep -v \"^#\" \"$file\")",
      "Bash(.venv/bin/python:*)",
      "Bash(uv lock:*)",
      "Bash(test:*)",
      "Bash(.venv/bin/ruff check src/ tests/)",
      "Bash(.venv/bin/ruff check src/ tests/ --no-fix)",
      "WebSearch",
      "Bash(BGB_LIMIT_FILES=5 timeout 30 python -m src train configs/local/smoke.yaml)",
      "Bash(uv sync:*)",
      "Bash(uv run:*)",
      "Bash(nvcc:*)",
      "Bash(uv pip show:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:pypi.org)",
      "Bash(uv pip uninstall:*)",
      "Read(//usr/local/**)",
      "Bash(wget:*)",
      "Bash(sudo dpkg:*)",
      "Bash(sudo apt-get:*)",
      "Bash(dos2unix:*)",
      "Bash(./fix_mamba_ssm.sh:*)",
      "Bash(export:*)",
      "Bash(export PATH=$CUDA_HOME/bin:$PATH)",
      "Bash(uv pip install:*)",
      "Bash(uv pip:*)",
      "Bash(for f in configs/local/*.yaml configs/modal/*.yaml)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(for f in configs/*/*.yaml)",
      "Bash(tmux kill-server:*)",
      "Read(//tmp/**)",
      "WebFetch(domain:modal.com)",
      "Bash(curl:*)",
      "Bash(xargs:*)"
    ],
    "deny": [],
    "ask": []
  }
}